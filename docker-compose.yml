version: '3.8'

services:
    app-webserver:
        image: nginx:stable-alpine
        container_name: app-webserver
        ports:
            - "80:80"
        volumes:
            - ./:/var/www/html
            - ./nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - app

        # Application Service
    app:
        container_name: app
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        tty: true
        ports:
            - "9000:9000"
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: app
        volumes:
            - ./:/var/www/html
        working_dir: /var/www/html
        networks:
            - app

    app-db:
        image: mysql:8.0
        container_name: app-db
        restart: unless-stopped
        tty: true
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: laravel
            MYSQL_ROOT_PASSWORD: root
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - dbdata:/var/lib/mysql/
        #      - ./mysql/my.cnf:/etc/mysql/my.cnf
        networks:
            - app

    app-redis:
        image: redis:latest
        container_name: app-redis
        restart: always
        command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
        ports:
         - '6379:6379'
        networks:
            - app
        volumes:
            - cache:/data

    app-supervisor:
        build:
            context: .
            dockerfile: Dockerfile.supervisor
        container_name: app-supervisor
        volumes:
            - .:/var/www/html
        networks:
            - app

networks:
    app:

volumes:
    dbdata:
        driver: local

    cache:
        driver: local
